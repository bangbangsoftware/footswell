{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/binder/dist/index.js","webpack:///./node_modules/binder/dist/plugins/swapperMoveSubplugin.js","webpack:///./node_modules/binder/dist/plugins/swapperPlugin.js","webpack:///./node_modules/binder/dist/plugins/togglePlugin.js","webpack:///./node_modules/binder/dist/plugins/showhidePlugin.js","webpack:///./node_modules/binder/dist/plugins/ifPlugin.js","webpack:///./js/time.js","webpack:///./js/results.js","webpack:///./node_modules/binder/dist/plugins/swapPlugin.js","webpack:///./js/index.js","webpack:///./js/banner.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","namesDone","Array","pluginsDone","isInput","element","localName","hide","style","display","show","storage","window","localStorage","dist_doc","document","dataKey","registry","getValue","innerText","setValue","doAll","statelisteners","console","error","getName","getAttribute","put","fieldname","stored","regEntry","currentValue","elements","data","map","find","e","id","push","keyvalue","keys","forEach","reg","JSON","stringify","setItem","bagItAndTagIt","plugs","getElementsByTagName","field","setup","plugins","setupPlugin","dist_tools","everything","querySelectorAll","results","registerAll","log","result","qty","listeners","Map","clickers","regString","getItem","setupListener","parse","er","reactAll","mapper","target","fns","fn","addListener","fieldID","changed","ears","list","funcList","set","addEventListener","react","childIDs","ids","indexOf","childNodes","length","max","node","HTMLElement","increment","usage","index","findIndex","use","replacement","pluginsForElement","pi","attributes","updateUsage","register","fixID","undefined","noSpace","replaceAll","typeText","setMode","newMode","oldMode","getMode","clickListener","modes","warn","shouldClick","filter","has","stateListener","rid","gain","split","join","registerState","plugin","plug","attr","hasAttribute","getPlugins","v","pluginName","registerPlugin","some","process","addToRegister","listen","lastCaptian","createCallback","tools","mover","found","dataIDpostFix","getElementById","el","findLast","ribbonID","ribbonElement","moveAction","callback","actionID","swapperPlugin_storage","binder","swapperPlugin_doc","actions","movers","registerMover","groupName","getGroupName","group","actionF","swapAction","doAction","actionElement","idSelected","classList","add","registerActionSelection","removeItem","remove","selected","action","acts","click","clickAction","registerSelection","swapValue","togglePlugin_binder","togglePlugin_click","trim","k","newIndex","showhidePlugin_doc","elementsGroups","regTrigger","showHideSwap","swap","storeElement","addHide","createElement","type","innerHTML","appendChild","contains","ifPlugin_doc","ifPlugin_getValue","valueElement","getValueFromStorage","ifPlugin_addHide","hasValue","ifPlugin_swap","incrementFn","minutesElement","secondsElement","underLimit","secs","parseInt","incrementSeconds","resetFn","minutes","seconds","mins","zeroFill","resultRows","changer","doc","num","scoreLabel","adjustGoal","changeScore","evt","adjust","state","undoToggle","crossedOut","replacePost","from","to","oldResult","detail","postFn","main","toggle","time","date","Date","getHours","getMinutes","getSeconds","timeFormat","createName","del","downloadFn","filename","file","Blob","navigator","msSaveOrOpenBlob","a","url","URL","createObjectURL","href","download","body","setTimeout","removeChild","revokeObjectURL","swapPlugin_storage","swapPlugin_doc","swapped","PREFIX","swapPlugin_actions","swapPlugin_movers","getParentIds","pid","sortParentID","pids","currentParentID","originParentID","parentIDs","storedPIDs","checkSwap","storedPids","other","splice","swapPlugin_click","parent","parentElement","swapPlugin_clickAction","swapPlugin_registerSelection","selectedElement","selectedParent","storeNewParentID","pidsString","swapPlugin_doAction","swapPlugin_registerActionSelection","swapPlugin_registerMover","swapPlugin_getGroupName","dataMove","swapPlugin_actionMover","running","js_main","events","undoToggleFn","post","tracker","clock","reset","timer","js_reset","playOn","paused","ev","ender","kickoff","concede","postForm","toggleWhere","toggleEdit","ifElement","playerScored","ex","setupPlayers","who","getPlayerName","scored","createKickOffText","where","toLowerCase","current","last","updated","setInterval","clearInterval","vrsScore","score","vrsName","getInnerNames","getNames","children","names","getPlayerNameFromList","getFormation","prefix","output","playerName","cap","isCaptain","player","adder","tag","positions","getGoalie"],"mappings":"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","file":"index.fs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const namesDone = new Array();\nconst pluginsDone = new Array();\nlet mode = \"\";\n//https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\nconst isInput = (element) => {\n    if (element == null || element.localName == null) {\n        return false;\n    }\n    return element.localName === \"input\";\n};\nconst hide = (element) => (element.style.display = \"none\");\nconst show = (element) => (element.style.display = \"block\");\nlet storage = window.localStorage;\nlet doc = document;\nlet dataKey = \"reg\";\nexport const registry = {};\nexport const get = (key) => registry[key];\nexport const getValue = (element) => {\n    if (isInput(element)) {\n        const input = element;\n        return input.value;\n    }\n    return element.innerText;\n};\nexport const setValue = (element, value) => {\n    if (element == null) {\n        console.error(\"Cannot set \" + value + \" as element is null\");\n        return;\n    }\n    if (isInput(element)) {\n        const input = element;\n        input.value = value;\n    }\n    element.innerText = value;\n    doAll(element, statelisteners);\n};\nconst getName = (element) => {\n    if (element == null) {\n        return \"\";\n    }\n    return element.getAttribute(\"name\") || \"\";\n};\nexport function put(element) {\n    const fieldname = getName(element);\n    if (fieldname === \"\") {\n        console.error(\"NO name in element !!!!? \", element);\n        return registry;\n    }\n    const stored = get(fieldname);\n    const regEntry = {\n        currentValue: getValue(element),\n        elements: [element]\n    };\n    const data = stored ? stored : regEntry;\n    data.currentValue = getValue(element);\n    data.elements = data.elements.map((element) => {\n        setValue(element, data.currentValue);\n        return element;\n    });\n    if (!data.elements.find(e => e.id === element.id)) {\n        data.elements.push(element);\n    }\n    registry[fieldname] = data;\n    const keyvalue = {};\n    Object.keys(registry).forEach(key => {\n        keyvalue[key] = registry[key].currentValue;\n    });\n    const reg = JSON.stringify(keyvalue);\n    storage.setItem(dataKey, reg);\n    return registry;\n}\nexport function clear() {\n    storage.setItem(dataKey, \"{}\");\n    for (const field in registry)\n        delete registry[field];\n}\nexport function bagItAndTagIt(plugs = Array(), key = \"reg\") {\n    dataKey = key;\n    hide(doc.getElementsByTagName(\"BODY\")[0]);\n    for (const field in registry)\n        delete registry[field];\n    setup();\n    const plugins = plugs.map(setupPlugin => setupPlugin(tools));\n    const everything = doc.querySelectorAll(\"*\");\n    let results = new Array();\n    everything.forEach((element) => {\n        results = registerAll(element, plugins, results);\n    });\n    console.log(\"Detected.....\");\n    results.forEach(result => console.log(result.name + \" - \" + result.qty));\n    console.log(\".............\");\n    show(doc.getElementsByTagName(\"BODY\")[0]);\n}\n// Just for testing....\nexport const setStorage = s => (storage = s);\nexport const setDocument = d => (doc = d);\nconst listeners = new Map();\nconst statelisteners = new Map();\nconst clickers = new Map();\nconst setup = () => {\n    console.log(\"Binder getting data from '\" + dataKey + \"' in local storage\");\n    const regString = storage.getItem(dataKey);\n    setupListener();\n    if (!regString) {\n        return;\n    }\n    try {\n        const reg = JSON.parse(regString);\n        Object.keys(reg).forEach(key => (registry[key] = { currentValue: reg[key], elements: [] }));\n    }\n    catch (er) {\n        console.error(\"cannot parse\", regString);\n        console.error(typeof regString);\n        console.error(er);\n    }\n};\nconst reactAll = (e, mapper) => {\n    if (e.target == null) {\n        return;\n    }\n    const element = e.target;\n    doAll(element, mapper);\n};\nconst doAll = (element, mapper) => {\n    const id = element.id;\n    const fns = mapper.get(id);\n    if (fns == null) {\n        return;\n    }\n    fns.forEach(fn => fn(element));\n};\nconst react = (e, mapper) => {\n    if (e.target == null) {\n        return;\n    }\n    const element = e.target;\n    const id = element.id;\n    const fn = mapper.get(id);\n    if (fn == null) {\n        console.error(\"ACTION: no action for \" + id);\n        return;\n    }\n    fn(e);\n};\nconst listen = (field, fn) => {\n    const changed = (e) => fn(e);\n    addListener(field.id, changed);\n};\nconst stateListener = (fieldID, fn) => {\n    const changed = (e) => fn(e);\n    addListener(fieldID, changed, statelisteners);\n};\nconst addListener = (fieldID, changed, ears = listeners) => {\n    const list = ears.get(fieldID);\n    const funcList = list ? list : new Array();\n    funcList.push(changed);\n    ears.set(fieldID, funcList);\n};\nconst setupListener = () => {\n    doc.addEventListener(\"change\", e => reactAll(e, listeners));\n    doc.addEventListener(\"onpaste\", e => reactAll(e, listeners));\n    doc.addEventListener(\"keyup\", e => reactAll(e, listeners));\n    doc.addEventListener(\"onin\", e => reactAll(e, listeners));\n    doc.addEventListener(\"statechange\", e => reactAll(e, statelisteners));\n    doc.addEventListener(\"click\", e => react(e, clickers));\n};\nconst childIDs = (element, ids = new Array()) => {\n    if (!element.id) {\n        console.error(\"no id, no click listener\", element);\n    }\n    else if (ids.indexOf(element.id) === -1) {\n        //console.log(\"stored to click \"+element.id);\n        ids.push(element.id);\n    }\n    if (element.childNodes.length === 0) {\n        return ids;\n    }\n    for (var i = 0, max = element.childNodes.length; i < max; i++) {\n        const node = element.childNodes[i];\n        if (node instanceof HTMLElement) {\n            ids = childIDs(node, ids);\n        }\n    }\n    return ids;\n};\nconst shouldClick = (modes) => {\n    if (modes.length === 0) {\n        console.log(\"No mode list set\");\n        return true;\n    }\n    if (mode.length === 0) {\n        console.log(\"No mode set\");\n        return true;\n    }\n    if (modes.indexOf(mode) > -1) {\n        console.log(\"Mode in list\");\n        return true;\n    }\n    console.warn(\"'\" + mode + \"' is not in mode list \", modes);\n    return false;\n};\nconst clickListener = (e, fn, modes = []) => {\n    const changed = e => {\n        if (shouldClick(modes)) {\n            fn(e);\n        }\n    };\n    childIDs(e)\n        .filter(id => !clickers.has(id))\n        .forEach(id => clickers.set(id, changed));\n};\nconst increment = (usage, name) => {\n    const index = usage.findIndex((use) => use.name === name);\n    if (index === -1) {\n        usage.push({ name, qty: 1 });\n        return usage;\n    }\n    const replacement = { name, qty: usage[index].qty + 1 };\n    usage[index] = replacement;\n    return usage;\n};\nconst updateUsage = (usage, pluginsForElement) => {\n    if (pluginsForElement.length === 0) {\n        increment(usage, \"total\");\n    }\n    pluginsForElement.forEach(pi => {\n        const key = pi.attributes[0];\n        increment(usage, key);\n    });\n    return usage;\n};\nconst registerAll = (element, plugins = Array(), usage) => {\n    if (element == null) {\n        return usage;\n    }\n    const pluginsForElement = register(element, plugins);\n    usage = updateUsage(usage, pluginsForElement);\n    // recurrsive calls....\n    for (var i = 0, max = element.childNodes.length; i < max; i++) {\n        const node = element.childNodes[i];\n        if (node instanceof HTMLElement) {\n            return registerAll(node, plugins, usage);\n        }\n    }\n    return usage;\n};\nconst fixID = (element, name) => {\n    if (element.id && element.id !== undefined) {\n        return element;\n    }\n    const noSpace = replaceAll(name, \" \", \"-\");\n    const id = replaceAll(noSpace, \",\", \"-\") + \"-\" + namesDone.length;\n    element.id = id;\n    const typeText = isInput(element) ? \"input\" : \"None input\";\n    console.error(\"No id for \" + typeText + \" element so, generating one: \", element.id);\n    return element;\n};\nexport const setMode = (newMode) => {\n    const oldMode = mode + \"\";\n    mode = newMode;\n    return oldMode;\n};\nexport const getMode = () => {\n    return mode;\n};\nexport const go = plugs => bagItAndTagIt(plugs);\nexport const tools = {\n    put,\n    get,\n    getValue,\n    setValue,\n    clickListener,\n    stateListener,\n    fixID\n};\nconst replaceAll = (s, rid, gain) => {\n    return s.split(rid).join(gain);\n};\nconst hasAttribute = (plug, element) => {\n    const attribute = plug.attributes.find(attr => element.hasAttribute(attr));\n    return attribute !== undefined;\n};\nconst getPlugins = (plugins, element) => {\n    return plugins.filter(plugin => hasAttribute(plugin, element));\n};\nconst register = (element, plugins = Array()) => {\n    const name = getName(element);\n    if (name) {\n        fixID(element, name);\n        registerState(element, name);\n    }\n    const pluginsForElement = getPlugins(plugins, element);\n    const pluginsDone = pluginsForElement.filter(plugin => {\n        const value = plugin.attributes\n            .map(attr => element.getAttribute(attr))\n            .find(v => v != undefined) || \"\";\n        const pluginName = value ? value : plugin.attributes[0];\n        fixID(element, pluginName);\n        return registerPlugin(element, plugin, pluginName);\n    });\n    return pluginsDone;\n};\nconst registerPlugin = (element, plugin, value) => {\n    if (pluginsDone.some(d => d === element.id + \"::\" + plugin.attributes[0])) {\n        return false;\n    }\n    pluginsDone.push(element.id + \"::\" + plugin.attributes[0]);\n    const used = plugin.process(element, value);\n    return used;\n};\nconst registerState = (element, fieldname) => {\n    if (namesDone.some(d => d === element.id)) {\n        return false;\n    }\n    namesDone.push(element.id);\n    addToRegister(element, fieldname);\n    if (isInput(element)) {\n        listen(element, e => put(e));\n    }\n    return true;\n};\nconst addToRegister = (element, fieldname) => {\n    const data = get(fieldname);\n    const elements = data ? data.elements : [];\n    elements.push(element);\n    const currentValue = data ? data.currentValue : getValue(element);\n    setValue(element, currentValue);\n    put(element);\n};\n//# sourceMappingURL=index.js.map","const ids = new Array();\nlet lastCaptian;\nconst findLast = (tools, mover) => {\n    const swapids = ids.map(id => id + \"-\" + mover.dataIDpostFix);\n    const found = swapids\n        .map(id => document.getElementById(id))\n        .filter(el => {\n        if (el == null) {\n            return false;\n        }\n        const value = tools.getValue(el);\n        console.log(\"VALUE IS ------\" + value + \"======\");\n        return value != null && value.length > 0;\n    });\n    console.log(\"FOUND \", found);\n    return found.length === 0 ? null : found[0];\n};\nconst createCallback = (tools, mover) => (element) => {\n    console.log(element.id + \" ACTION clicked\");\n    if (lastCaptian == null) {\n        lastCaptian = findLast(tools, mover);\n    }\n    const ribbonID = element.id + \"-\" + mover.dataIDpostFix;\n    const ribbonElement = document.getElementById(ribbonID);\n    if (ribbonElement == null) {\n        console.error(\"Swap move action - \" + ribbonID + \" does not exist in DOM?!\");\n        return;\n    }\n    console.log(ribbonID + \", element is \", ribbonElement);\n    tools.setValue(ribbonElement, mover.data);\n    tools.put(ribbonElement);\n    if (lastCaptian != null) {\n        tools.setValue(lastCaptian, \"\");\n        tools.put(lastCaptian);\n    }\n    lastCaptian = ribbonElement;\n};\nexport const moveAction = (tools, mover, id) => {\n    if (ids.indexOf(id) === -1) {\n        ids.push(id);\n    }\n    const callback = createCallback(tools, mover);\n    return {\n        id: mover.actionID,\n        callback\n    };\n};\n//# sourceMappingURL=swapperMoveSubplugin.js.map","import { moveAction } from \"./swapperMoveSubplugin.js\";\n// Just for testing....\nlet storage = window.localStorage;\nexport function setStorage(s) {\n    storage = s;\n}\n// Just for testing....\nlet doc = document;\nexport function setDocument(d) {\n    doc = d;\n}\nlet binder;\nconst actions = new Array();\nconst movers = new Array();\nexport const actionMover = (dataMove) => {\n    movers.push(dataMove);\n};\nexport const swapAction = (actionF) => {\n    actions.push(actionF);\n};\nexport const swapperPlugin = (tools) => {\n    binder = tools;\n    return { attributes: [\"swapper\", \"swapper-action\"], process: (element) => {\n            registerMover(tools, element);\n            tools.clickListener(element, (e) => click(element));\n            return true;\n        } };\n};\nconst getGroupName = (element) => {\n    const actionName = element.getAttribute(\"swapper-action\");\n    if (actionName != null) {\n        return false;\n    }\n    const groupName = element.getAttribute(\"swapper\");\n    if (groupName == null) {\n        return false;\n    }\n    return groupName;\n};\nconst registerMover = (tools, element) => {\n    const groupName = getGroupName(element);\n    if (!groupName) {\n        return;\n    }\n    movers.filter((mover) => mover.group === groupName)\n        .forEach((mover) => {\n        const creator = moveAction(tools, mover, element.id);\n        swapAction(creator);\n    });\n};\nconst registerSelection = (element, groupName) => {\n    element.classList.add(\"swap-selected\");\n    storage.setItem(\"swap-\" + groupName, element.id);\n    const actionID = storage.getItem(\"swap-action-\" + groupName);\n    if (actionID == null) {\n        return;\n    }\n    const actionElement = doc.getElementById(actionID);\n    if (actionElement == null) {\n        console.error(actionID + \" action is missing??\");\n        return;\n    }\n    doAction(actionElement, groupName);\n};\nconst registerActionSelection = (element, groupName) => {\n    element.classList.add(\"swap-selected\");\n    storage.setItem(\"swap-action-\" + groupName, element.id);\n};\nconst clickAction = (element) => {\n    const groupName = element.getAttribute(\"swapper-action\");\n    if (groupName == null) {\n        console.error(\"swapper action has no group? \", element);\n        return;\n    }\n    doAction(element, groupName);\n};\nconst doAction = (actionElement, groupName) => {\n    const idSelected = storage.getItem(\"swap-\" + groupName);\n    const actionID = storage.getItem(\"swap-action-\" + groupName);\n    if (actionID == null && idSelected == null) {\n        registerActionSelection(actionElement, groupName);\n        return;\n    }\n    storage.removeItem(\"swap-action-\" + groupName);\n    if (idSelected == null) {\n        console.log(\"Nothing selected for action yet\");\n        return;\n    }\n    storage.removeItem(\"swap-\" + groupName);\n    actionElement.classList.remove(\"swap-selected\");\n    const selected = doc.getElementById(idSelected);\n    if (selected == null) {\n        console.error(idSelected + \" is missing??\");\n        return;\n    }\n    selected.classList.remove(\"swap-selected\");\n    const action = actions.find(acts => acts.id === actionElement.id);\n    if (action == null) {\n        console.error(\"No id action registered for \" + actionElement.id);\n        return;\n    }\n    action.callback(selected);\n};\nexport const click = (element) => {\n    const groupName = element.getAttribute(\"swapper\");\n    if (groupName == null) {\n        clickAction(element);\n        return;\n    }\n    const idSelected = storage.getItem(\"swap-\" + groupName);\n    if (!idSelected) {\n        registerSelection(element, groupName);\n        return;\n    }\n    storage.removeItem(\"swap-\" + groupName);\n    const selected = doc.getElementById(idSelected);\n    if (selected == null) {\n        console.error(idSelected + \" is missing ???!\");\n        return;\n    }\n    selected.classList.remove(\"swap-selected\");\n    if (idSelected === element.id) {\n        console.error(\"what are you doing swap with itself???!\");\n        return;\n    }\n    const swapValue = binder.getValue(selected) + \"\";\n    const value = binder.getValue(element);\n    if (value === swapValue) {\n        console.log(\"Don't swap to itself '\" + value + \"'\");\n        return;\n    }\n    binder.setValue(element, swapValue + \"\");\n    binder.setValue(selected, value + \"\");\n    binder.put(element);\n    binder.put(selected);\n};\n//# sourceMappingURL=swapperPlugin.js.map","let binder;\nexport const togglePlugin = (tools) => {\n    binder = tools;\n    return { attributes: [\"toggle\"], process: (element, name) => {\n            tools.clickListener(element, (e) => click(element));\n            return true;\n        } };\n};\nexport const click = (element) => {\n    const listString = element.getAttribute(\"toggle\") || \"\";\n    const list = listString.split(/,/).map(t => t.trim());\n    const value = binder.getValue(element);\n    const index = list\n        .map((l, index) => {\n        const v = l.trim();\n        return v === value ? index : false;\n    })\n        .find((k) => k !== false);\n    if (index === undefined) {\n        console.error(\"Cannot find element with value '\" + value + \"'\");\n        binder.setValue(element, list[0]);\n        binder.put(element);\n        return;\n    }\n    const newIndex = list.length > index + 1 ? index + 1 : 0;\n    binder.setValue(element, list[newIndex]);\n    binder.put(element);\n};\n//# sourceMappingURL=togglePlugin.js.map","// Just for testing....\nlet doc = document;\nexport function setDocument(d) {\n    doc = d;\n}\nconst elementsGroups = {};\nexport const showHidePlugin = tools => {\n    addHide();\n    return {\n        attributes: [\"showhide\", \"showhide-trigger\"],\n        process: (element, name) => {\n            const groupName = element.getAttribute(\"showhide\");\n            if (!groupName) {\n                return regTrigger(tools, name, element);\n            }\n            const list = groupName.split(\",\");\n            list.forEach(name => storeElement(name.trim(), element));\n            return true;\n        }\n    };\n};\nconst regTrigger = (tools, name, element) => {\n    tools.clickListener(element, () => showHideSwap(name));\n    return true;\n};\nexport const showHideSwap = name => {\n    const list = elementsGroups[name];\n    list.forEach((el) => swap(el));\n};\nconst storeElement = (groupName, element) => {\n    const group = elementsGroups[groupName];\n    const list = group === undefined ? [] : group;\n    list.push(element);\n    elementsGroups[groupName] = list;\n};\nconst addHide = () => {\n    var style = doc.createElement(\"style\");\n    style.type = \"text/css\";\n    style.innerHTML = \".hide { display: none; } \";\n    doc.getElementsByTagName(\"head\")[0].appendChild(style);\n};\nconst swap = (element) => {\n    if (element.classList.contains(\"hide\")) {\n        element.classList.remove(\"hide\");\n    }\n    else {\n        element.classList.add(\"hide\");\n    }\n};\n//# sourceMappingURL=showhidePlugin.js.map","// Just for testing....\nlet doc = document;\nexport function setDocument(d) {\n    doc = d;\n}\nexport const ifPlugin = tools => {\n    addHide();\n    return {\n        attributes: [\"if\"],\n        process: (ifElement, name) => {\n            const fieldID = ifElement.getAttribute(\"if\");\n            if (!fieldID) {\n                return false;\n            }\n            console.log(\"IFP - \" + fieldID + \" has an if.... \");\n            0;\n            tools.stateListener(fieldID, (valueElement) => {\n                const value = getValue(tools, fieldID);\n                swap(ifElement, value);\n            });\n            const value = getValue(tools, fieldID);\n            swap(ifElement, value);\n            return true;\n        }\n    };\n};\nconst getValue = (tools, fieldID) => {\n    const valueElement = doc.getElementById(fieldID);\n    if (valueElement == null) {\n        return getValueFromStorage(tools, fieldID);\n    }\n    const value = tools.getValue(valueElement);\n    return value;\n};\nconst getValueFromStorage = (tools, fieldID) => {\n    const regEntry = tools.get(fieldID);\n    if (regEntry == null) {\n        return null;\n    }\n    return regEntry.currentValue;\n};\nconst addHide = () => {\n    var style = doc.createElement(\"style\");\n    style.type = \"text/css\";\n    style.innerHTML = \".hide { display: none; } \";\n    doc.getElementsByTagName(\"head\")[0].appendChild(style);\n};\nconst hasValue = value => {\n    if (value == undefined) {\n        return false;\n    }\n    if (value == null) {\n        return false;\n    }\n    return value.trim().length > 0;\n};\nconst swap = (element, value) => {\n    console.log(element.id + \" >>\", value, \"<< \" + hasValue(value));\n    if (hasValue(value)) {\n        console.log(\"IFP - removing \" + element.id + \" hiding\");\n        element.classList.remove(\"hide\");\n    }\n    else {\n        console.log(\"IFP - \" + element.id + \" hiding\");\n        element.classList.add(\"hide\");\n    }\n    console.log(\"\");\n};\n//# sourceMappingURL=ifPlugin.js.map","export function timer(minutesElement, secondsElement, underLimit = 10) {\n  const increment = incrementFn(minutesElement, secondsElement, underLimit);\n  const reset = resetFn(minutesElement, secondsElement, underLimit);\n  return {\n    increment,\n    reset\n  };\n}\n\nconst incrementFn = (minutesElement, secondsElement, underLimit) => () => {\n  const secs = parseInt(secondsElement.innerText) + 1;\n  if (secs > 59) {\n    incrementSeconds(minutesElement, secondsElement, underLimit);\n    return;\n  }\n  secondsElement.innerText = secs < 10 ? `0${secs}` : secs;\n};\n\nconst resetFn = (minutesElement, secondsElement) => () => {\n  secondsElement.innerText = \"00\";\n  secondsElement.classList.remove(\"red\");\n  minutesElement.innerText = \"00\";\n  minutesElement.classList.remove(\"red\");\n};\n\nexport function timeFormat(date = new Date()) {\n  const hr = zeroFill(date.getHours());\n  const mn = zeroFill(date.getMinutes());\n  const sc = zeroFill(date.getSeconds());\n  return `${hr}:${mn}:${sc}`;\n}\n\nconst incrementSeconds = (minutes, seconds, underLimit) => {\n  seconds.innerText = 0;\n  const mins = parseInt(minutes.innerText) + 1;\n  if (mins < underLimit) {\n    minutes.innerText = \"0\" + mins;\n    return;\n  }\n  minutes.innerText = zeroFill(mins);\n  seconds.classList.add(\"red\");\n  minutes.classList.add(\"red\");\n};\n\nconst zeroFill = i => {\n  if (i < 10) {\n    return \"0\" + i;\n  }\n  return i;\n};\n","import { timeFormat } from \"./time\";\n\nlet resultRows = [];\nexport function clear() {\n  resultRows = [];\n}\n\nexport function get() {\n  return resultRows.map(m => m);\n}\n\nconst changer = doc => (num, name = \"score\") => {\n  const scoreLabel = doc.getElementById(name);\n  scoreLabel.innerText = parseInt(scoreLabel.innerText) + num;\n};\n\nconst adjustGoal = (changeScore, evt, adjust = 1) => {\n  if (adjust < 1) {\n    evt.element.classList.add(\"crossout\");\n  } else {\n    evt.element.classList.remove(\"crossout\");\n  }\n  if (evt.state == null) {\n    return;\n  }\n  const tag = evt.state === \"concide\" ? \"vrsScore\" : \"score\";\n  changeScore(adjust, tag);\n};\n\nconst undoToggle = changeScore => evt => {\n  evt.crossedOut = !evt.crossedOut;\n  const adjust = evt.crossedOut ? -1 : 1;\n  adjustGoal(changeScore, evt, adjust);\n};\n\nconst replacePost = (from, to) => {\n  const oldResult = resultRows.find(el => el.detail === from);\n  oldResult.element.innerText = \"\"+to;\n  oldResult.detail = \"\"+to;\n};\n\nexport function tracker(doc, main) {\n  const changeScore = changer(doc);\n  const undoToggleFn = undoToggle(changeScore);\n  const post = postFn(doc, main, undoToggleFn, changeScore);\n  const download = downloadFn(doc);\n  return {\n    changeScore,\n    post,\n    replacePost,\n    download\n  };\n}\n\nconst postFn = (doc, main, toggle, changeScore) => evt => {\n  evt.time = timeFormat();\n\n  const time = doc.createElement(\"div\");\n  time.createName = \"time\";\n  time.classList.add(\"result\");\n  time.innerText = evt.time;\n\n  const detail = doc.createElement(\"div\");\n  detail.createName = \"result\";\n  detail.classList.add(\"result\");\n  detail.innerText = evt.detail;\n  evt.element = detail;\n\n  const del = doc.createElement(\"button\");\n  del.createName = \"deleteToggle\";\n  del.classList.add(\"result\");\n  del.innerText = \"X\";\n  del.addEventListener(\"click\", () => toggle(evt));\n  evt.id = resultRows.length;\n  evt.crossedOut = false;\n\n  main.appendChild(time);\n  main.appendChild(detail);\n  main.appendChild(del);\n\n  resultRows.push(evt);\n\n  if (evt.state != null) {\n    adjustGoal(changeScore, evt, 1);\n  }\n\n  return evt;\n};\n\nconst downloadFn = doc => () => {\n  const date = new Date();\n\n  let data = \"\";\n  resultRows\n    .filter(evt => !evt.crossedOut)\n    .forEach(evt => {\n      data = data + evt.time + \", \" + evt.detail + \"\\n\";\n    });\n  const filename = date + \".csv\";\n  const type = \"csv\";\n  const file = new Blob([data], { type });\n  if (window.navigator.msSaveOrOpenBlob) {\n    // IE10+\n    window.navigator.msSaveOrOpenBlob(file, filename);\n    return;\n  }\n  // Others\n  const a = doc.createElement(\"a\");\n\n  const url = URL.createObjectURL(file);\n  a.href = url;\n  a.download = filename;\n  doc.body.appendChild(a);\n  a.click();\n  setTimeout(() => {\n    doc.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }, 0);\n};\n","import { moveAction } from \"./swapperMoveSubplugin.js\";\n// Just for testing....\nlet storage = window.localStorage;\nlet doc = document;\nconst swapped = new Array();\nconst PREFIX = \"swap-parent-id-for-\";\nconst actions = new Array();\nconst movers = new Array();\nexport function setStorage(s) {\n    storage = s;\n}\nexport function setDocument(d) {\n    doc = d;\n}\nexport const actionMover = (dataMove) => movers.push(dataMove);\nexport const action = (actionF) => actions.push(actionF);\nexport const swapPlugin = tools => {\n    return {\n        attributes: [\"swap\", \"swap-action\"],\n        process: (element, groupName) => {\n            const pids = getParentIds(element, tools);\n            if (!pids) {\n                return false;\n            }\n            registerMover(tools, element);\n            storage.setItem(PREFIX + element.id, JSON.stringify(pids));\n            if (groupName) {\n                tools.clickListener(element, (e) => click(element), [groupName]);\n            }\n            else {\n                console.error(\"SWAP PLUGIN:No group name??! \", element);\n            }\n            return true;\n        }\n    };\n};\nexport const getParentIds = (element, tools) => {\n    const pid = sortParentID(element, tools);\n    if (!pid) {\n        return false;\n    }\n    const pids = { currentParentID: pid, originParentID: pid };\n    const parentIDs = storage.getItem(PREFIX + element.id);\n    if (parentIDs) {\n        const storedPIDs = JSON.parse(parentIDs);\n        checkSwap(element, storedPIDs);\n        return storedPIDs;\n    }\n    return pids;\n};\nexport const checkSwap = (element, pids) => {\n    const found = swapped.findIndex(storedPids => pids.originParentID === storedPids.pids.originParentID ||\n        pids.currentParentID === storedPids.pids.originParentID ||\n        pids.originParentID === storedPids.pids.currentParentID ||\n        pids.currentParentID === storedPids.pids.currentParentID);\n    if (found === -1) {\n        swapped.push({ element, pids });\n        return;\n    }\n    const other = swapped.splice(found, 1);\n    click(element);\n    click(other[0].element);\n};\nexport const sortParentID = (element, tools) => {\n    const parent = element.parentElement;\n    if (parent == null) {\n        return false;\n    }\n    const parentWithID = tools.fixID(parent, PREFIX + element.id);\n    return parentWithID.id;\n};\nexport const click = (element) => {\n    const groupName = element.getAttribute(\"swap\");\n    if (groupName == null) {\n        clickAction(element);\n        return;\n    }\n    const key = \"swapall\" + groupName;\n    const idSelected = storage.getItem(key);\n    if (!idSelected) {\n        registerSelection(element, groupName, key);\n        return;\n    }\n    storage.removeItem(key);\n    const selectedElement = doc.getElementById(idSelected);\n    if (selectedElement == null) {\n        console.error(idSelected + \" is missing ???!\");\n        return;\n    }\n    selectedElement.classList.remove(\"swap-selected\");\n    if (idSelected === element.id) {\n        console.error(\"what are you doing swap with itself???!\");\n        return;\n    }\n    const selectedParent = selectedElement.parentElement;\n    const parent = element.parentElement;\n    if (!parent || !selectedParent) {\n        return;\n    }\n    parent.removeChild(element);\n    selectedParent.removeChild(selectedElement);\n    parent.appendChild(selectedElement);\n    selectedParent.appendChild(element);\n    storeNewParentID(selectedElement, parent.id);\n    storeNewParentID(element, selectedParent.id);\n};\nexport const storeNewParentID = (element, id) => {\n    const key = PREFIX + element.id;\n    const pidsString = storage.getItem(key);\n    if (pidsString == null) {\n        return false;\n    }\n    const pids = JSON.parse(pidsString);\n    pids.currentParentID = id;\n    if (pids.originParentID === pids.currentParentID) {\n        storage.removeItem(key);\n    }\n    else {\n        storage.setItem(key, JSON.stringify(pids));\n    }\n};\nconst registerActionSelection = (element, groupName) => {\n    element.classList.add(\"swap-selected\");\n    storage.setItem(\"swap-action-\" + groupName, element.id);\n};\nconst clickAction = (element) => {\n    const groupName = element.getAttribute(\"swap-action\");\n    if (groupName == null) {\n        console.error(\"swap action has no group? \", element);\n        return;\n    }\n    doAction(element, groupName);\n};\nconst doAction = (actionElement, groupName) => {\n    const actionID = storage.getItem(\"swap-action-\" + groupName);\n    const key = \"swapall\" + groupName;\n    const idSelected = storage.getItem(key);\n    if (actionID == null && idSelected == null) {\n        registerActionSelection(actionElement, groupName);\n        return;\n    }\n    storage.removeItem(\"swap-action-\" + groupName);\n    if (idSelected == null) {\n        console.log(\"Nothing selected for action yet\");\n        return;\n    }\n    storage.removeItem(key);\n    actionElement.classList.remove(\"swap-selected\");\n    const selected = doc.getElementById(idSelected);\n    if (selected == null) {\n        console.error(idSelected + \" is missing??\");\n        return;\n    }\n    selected.classList.remove(\"swap-selected\");\n    const action = actions.find(acts => acts.id === actionElement.id);\n    if (action == null) {\n        console.error(\"No id action registered for \" + actionElement.id);\n        return;\n    }\n    action.callback(selected);\n};\nconst getGroupName = (element) => {\n    const actionName = element.getAttribute(\"swap-action\");\n    if (actionName != null) {\n        return false;\n    }\n    const groupName = element.getAttribute(\"swap\");\n    if (groupName == null) {\n        return false;\n    }\n    return groupName;\n};\nconst registerMover = (tools, element) => {\n    const groupName = getGroupName(element);\n    if (!groupName) {\n        return;\n        1;\n    }\n    movers.filter((mover) => mover.group === groupName)\n        .forEach((mover) => {\n        const creator = moveAction(tools, mover, element.id);\n        action(creator);\n    });\n};\nconst registerSelection = (element, groupName, key) => {\n    element.classList.add(\"swap-selected\");\n    storage.setItem(key, element.id);\n    const actionID = storage.getItem(\"swap-action-\" + groupName);\n    if (actionID == null) {\n        return;\n    }\n    const actionElement = doc.getElementById(actionID);\n    if (actionElement == null) {\n        console.error(actionID + \" action is missing??\");\n        return;\n    }\n    doAction(actionElement, groupName);\n};\n//# sourceMappingURL=swapPlugin.js.map","import { bagItAndTagIt, put, get, setMode, getMode } from \"binder\";\nimport { swapperPlugin } from \"binder/dist/plugins/swapperPlugin\";\nimport { togglePlugin } from \"binder/dist/plugins/togglePlugin\";\nimport { showHidePlugin } from \"binder/dist/plugins/showhidePlugin\";\nimport { ifPlugin } from \"binder/dist/plugins/ifPlugin\"; \nimport { banner } from \"./banner\";\nimport { timer } from \"./time\";\nimport { clear, tracker } from \"./results\";\n\nimport { swapPlugin, actionMover } from \"binder/dist/plugins/swapPlugin.js\";\n\nconst group = \"swaps\";\nconst actionID = \"captain-butt\";\nconst data = \"- Captian -\";\nconst dataIDpostFix = \"data\";\nconst mover = { group, actionID, data, dataIDpostFix};\nactionMover(mover);\n\nlet running = null;\n\nconst main = document.getElementById(\"results\");\nconst events = tracker(document, main);\n\nconst secs = document.getElementById(\"seconds\");\nconst mins = document.getElementById(\"minutes\");\nconst clock = timer(mins, secs);\n\nconst resetBut = document.getElementById(\"reset\");\nresetBut.addEventListener(\"click\", () => reset());\n\nconst playonBut = document.getElementById(\"playon\");\nplayonBut.addEventListener(\"click\", () => playOn());\n\nconst whistleBut = document.getElementById(\"whistle\");\nwhistleBut.addEventListener(\"click\", () => paused());\n\nconst finishedBut = document.getElementById(\"finished\");\nfinishedBut.addEventListener(\"click\", ev => ender(ev));\n\nconst kickoffBut = document.getElementById(\"kickoff\");\nkickoffBut.addEventListener(\"click\", () => kickoff());\n\nconst concedeBut = document.getElementById(\"vrsScore\");\nconcedeBut.addEventListener(\"click\", () => concede());\n\nconst infoBut1 = document.getElementById(\"updateInfo\");\ninfoBut1.addEventListener(\"click\", () => postForm());\n\nconst infoBut2 = document.getElementById(\"updateInfo2\");\ninfoBut2.addEventListener(\"click\", () => postForm());\n\nconst where = document.getElementById(\"where\");\nwhere.addEventListener(\"click\", () => toggleWhere());\n\nconst edit = document.getElementById(\"edit\");\nedit.addEventListener(\"click\", () => toggleEdit());\n\nconst setupPlayers = () => {\n  for (let n = 1; n < 22; n++) {\n    const el = document.getElementById(\"slot\" + n+\"b\");\n    try {\n      el.addEventListener(\"click\", e => playerScored(e));\n    } catch (ex) {\n      console.error(n + \". failed is it in the markup?\");\n      console.error(ex);\n    }\n  }\n};\n\nbanner();\nbagItAndTagIt([swapPlugin, swapperPlugin, togglePlugin, showHidePlugin, ifPlugin]);\nsetupPlayers();\n\nconst playerScored = e => {\n  if (getMode() !== \"kickoff\"){\n    return;\n  }\n  const element = e.target;\n  const who = getPlayerName(element);\n  if (!who) {\n    console.error(\n      element.name + \" (\" + element.id + \") has no player defined!\"\n    );\n    return;\n  }\n  events.post({ detail: \"Goal by \" + who, state: \"scored\" });\n  const scored = document.getElementById(\"scored\");\n  scored.innerText = \"!!! \" + who + \" scored !!!\";\n  scored.classList.remove(\"hide\");\n  put(scored);\n  setTimeout(() => {\n    document.getElementById(\"scored\").classList.add(\"hide\");\n  }, 3000);\n};\n\nconst kickoff = () => {\n  setMode(\"kickoff\");  \n  document.getElementById(\"kickoff-grid\").style.display = \"none\";\n  document.getElementById(\"finished\").classList.remove(\"hide\");\n  clear();\n  const detail = createKickOffText();\n  events.post({ detail });\n  const scoreLabel = document.getElementById(\"score\");\n  scoreLabel.innerText = \"0\";\n  const vrsScoreLabel = document.getElementById(\"vrsScore\");\n  vrsScoreLabel.innerText = \"0\";\n  playOn();\n};\n\nconst createKickOffText = (toggle = false) => {\n  const where = document.getElementById(\"where\").innerText;\n  const toggleText = where === \"HOME\" ? \"away\" : \"home\";\n  const whereText = toggle ? toggleText : where.toLowerCase();\n  const op = document.getElementById(\"opposition\").value;\n  return \"Kick off \" + whereText + \" vrs \" + op;\n};\n\nconst toggleEdit = () => {\n  const current = getMode();\n  const nextMode= (current == \"edit\")? \"\": \"edit\";\n  setMode(nextMode);\n};\n\nconst toggleWhere = () => {\n  const last = createKickOffText();\n  const updated = createKickOffText(true);\n  events.replacePost(last, updated);\n};\n\nconst reset = () => {\n  events.post({ detail: \"New quarter\" });\n  clock.reset();\n};\n\nconst playOn = () => {\n  setMode(\"kickoff\");  \n  running = setInterval(clock.increment, 1000);\n  document.getElementById(\"whistle\").classList.remove(\"hide\");\n  document.getElementById(\"stateblock\").style.display = \"none\";\n};\n\nconst paused = () => {\n  setMode(\"\");  \n  document.getElementById(\"whistle\").classList.add(\"hide\");\n  document.getElementById(\"stateblock\").style.display = \"grid\";\n  clearInterval(running);\n  running = null;\n};\n\nconst ender = ev => {\n  paused();\n  const vrsScore = document.getElementById(\"vrsScore\").innerText;\n  const score = document.getElementById(\"score\").innerText;\n  const vrsName = document.getElementById(\"opposition\").value;\n  const name    = document.getElementById(\"teamName\").value;\n  events.post({ detail: \"Final Whistle- \"+name+\":\"+score+\" vrs \"+vrsName+\": \"+vrsScore+\"\" });\n  events.download();\n  const kickoffBut = document.getElementById(\"kickoff\");\n  kickoffBut.style.display = \"block\";\n  ev.target.style.display = \"none\";\n};\n\nconst concede = () => {\n  const name = document.getElementById(\"opposition\").value;\n  events.post({\n    detail: \"Conceded a goal from \" + name,\n    state: \"concide\"\n  });\n};\n\nconst getInnerNames = id =>{\n  const el = document.getElementById(id);\n  if (el == null){\n    console.error(id+\" doesn't exist?!\");\n    return null;\n  }\n  return getNames(el);\n};\n\nconst getNames = (el, list = []) => {\n  const name = el.getAttribute(\"name\");\n  if (name != null) {\n    list.push(name);\n  }\n  if (el.children.length > 0){\n    for (let i = 0; i < el.children.length; i++) {\n      list = getNames(el.children[i], list);     \n    }\n  }\n  return list;\n};\n  \nconst isCaptain = names =>{\n  const key = names.find(name => name.indexOf(dataIDpostFix) > -1);\n  if (key == null){\n    return false;\n  }\n  const captain = get(key);\n  return captain.currentValue.length > 0;\n};\n\nconst getPlayerName = element =>{\n  const names = getNames(element);\n  return getPlayerNameFromList(names);\n};  \n\nconst getPlayerNameFromList = names =>{\n  const key = names.find(name => name.indexOf(dataIDpostFix) == -1);\n  if (key == null){\n    return null;\n  }\n  const playerName =  get(key);\n  return playerName.currentValue;\n};\n\n\nconst getFormation = (prefix, n = 1, output = \"\")=>{\n  if (n > 5){\n    return output;\n  }\n  const id = prefix+\"-\" + n;\n  const names = getInnerNames(id);\n  const playerName = getPlayerNameFromList(names); \n  const isCap = isCaptain(names);\n  const cap = (isCap)? \"(Captain)\":\"\";\n  if (playerName == null) {\n    console.error(id+\" has no player name ?!!\");\n  } else {\n    const player = playerName + cap;\n    output = output === \"\" ? player : output + \", \" + player;\n  }\n  return getFormation(prefix, n+1, output);\n};\n\nconst adder = (tag, prefix) => {\n  const positions = getFormation(prefix,1, \"\");\n  if (!positions) {\n    return \"\";\n  }\n  return tag + \": \" + positions + \". \";\n};\n\nconst getGoalie = () => {\n  const names = getInnerNames(\"goalie\");\n  const playerName = getPlayerNameFromList(names); \n  return \"Goalie: \"+playerName;\n};\n\nconst postForm = () => {\n  const front = adder(\"Up front\", \"front\");\n  const mid = adder(\"Mid field\", \"mid\");\n  const back = adder(\"Back\", \"back\");\n  const goal = getGoalie();\n  const detail = \"Formation-  \" + front + mid + back + goal;\n  console.log(\"FORMATION \",detail);\n  events.post({ detail });\n};\n","export function banner() {\n  console.log(\"\");  \n  console.log(\n    \"     ,...                                                             ,,    ,,\"\n  );\n  console.log(\n    '   .d\\'\"\"                  mm                                        `7MM  `7MM '\n  );\n  console.log(\n    \"   dM`                    MM                                          MM    MM  \"\n  );\n  console.log(\n    '  mMMmm,pW\"Wq.   ,pW\"Wq.mmMMmm     ,pP\"Ybd `7M\\'    ,A    `MF\\'.gP\"Ya   MM    MM  '\n  );\n  console.log(\n    \"   MM 6W'   `Wb 6W'   `Wb MM       8I   `\\\"   VA   ,VAA   ,V ,M'   Yb  MM    MM  \"\n  );\n  console.log(\n    '   MM 8M     M8 8M     M8 MM       `YMMMa.    VA ,V  VA ,V  8M\"\"\"\"\"\"  MM    MM  '\n  );\n  console.log(\n    \"   MM YA.   ,A9 YA.   ,A9 MM       L.   I8     VVV    VVV   YM.    ,  MM    MM  \"\n  );\n  console.log(\n    \" .JMML.`Ybmd9'   `Ybmd9'  `Mbmo    M9mmmP'      W      W     `Mbmmd'.JMML..JMML.\"\n  );\n  console.log(\"\");\n}\n"],"sourceRoot":""}